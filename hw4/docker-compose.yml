version: '3.6'
services:
  app:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "3001:3001"
    environment:
      - MONGO_URI=mongodb://mongo:27017/monitoring_db
      - ELASTICSEARCH_URI=http://elasticsearch:9200
    depends_on:
      - mongo
      - elasticsearch

  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.11
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app

  telegraf:
    image: telegraf:1.18-alpine
    container_name: telegraf
    volumes:
    - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '127.0.0.1:8125:8125/udp'

  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    container_name: grafana
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

volumes:
  mongo_data: {}
  grafana_data: {}
  influxdb_data: {}
